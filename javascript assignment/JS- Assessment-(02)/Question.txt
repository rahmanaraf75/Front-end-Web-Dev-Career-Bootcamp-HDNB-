** 1. Practicing Array Methods with Football Player Data**

In this assignment, you'll use JavaScript array methods like filter, find, reduce, map, and sort to perform operations on an array of football player objects. Each player object contains information about a famous football player, including their name, age, position, goals, and team.

Use the player data provided below and follow the instructions to complete each task.

const players = [
    { name: 'Lionel Messi', age: 36, position: 'Forward', goals: 805, team: 'Inter Miami' },
    { name: 'Cristiano Ronaldo', age: 39, position: 'Forward', goals: 835, team: 'Al Nassr' },
    { name: 'Neymar Jr', age: 31, position: 'Forward', goals: 400, team: 'Al Hilal' },
    { name: 'Kylian Mbappe', age: 25, position: 'Forward', goals: 270, team: 'Paris Saint-Germain' },
    { name: 'Luka Modric', age: 38, position: 'Midfielder', goals: 91, team: 'Real Madrid' },
    { name: 'Kevin De Bruyne', age: 32, position: 'Midfielder', goals: 105, team: 'Manchester City' },
    { name: 'Virgil van Dijk', age: 32, position: 'Defender', goals: 45, team: 'Liverpool' },
    { name: 'Erling Haaland', age: 23, position: 'Forward', goals: 160, team: 'Manchester City' },
    { name: 'Robert Lewandowski', age: 35, position: 'Forward', goals: 550, team: 'Barcelona' },
];

Solve this
a. Get all players who have scored more than 500 goals.

b. Find the first player who plays as a Midfielder.

c. Calculate the total number of goals scored by all players.

d. Create an array containing only the names of the players.

e. Sort the players by age from youngest to oldest.

f. Get all players who play for Manchester City.

g. Sort the players by goals scored from highest to lowest.

h. Create an array of strings describing each player in the format: "<name> plays as a <position> for <team>."

i. Get all players who are aged 30 or older.

j. Find the player who has scored the most goals.

2.Immediately Invoked Function Expression (IIFE)

Write an IIFE that calculates the sum of two numbers and immediately logs the result to the console. Then, write another IIFE that accepts a parameter and logs that parameter.

3.Object.assign ans spread

Use Object.assign to merge two objects (e.g., create contactInfo object and an address object and give property as you wish) into a new object and log the result. Use spread operator to do the same.

Submission Guidelines
Create an HTML File

Create an HTML file named index.html.
In this file, link a JavaScript file (created in Step 2) to execute the code.
Create a JavaScript File

Create a JavaScript file named script.js.
Write all your code for the tasks listed in the assignment inside this script.js file.
Link the JavaScript File to the HTML File

In index.html, link script.js by adding the following line inside the <body> tag:

<script src="script.js"></script>

Test Your Code

Open index.html in a web browser to ensure that your JavaScript code runs correctly and the output appears in the console.
Submit the Files

Compress both index.html and script.js into a .zip file.
Name the .zip file with your name (e.g., YourName_Assignment.zip).
Submit the .zip file.
Note: Make sure to test each task individually and check the console output to verify correctness.